#nullable enable
NuGet.VisualStudio.Internal.Contracts.INuGetProjectManagerService.GetInstalledAndTransitivePackagesAsync(System.Collections.Generic.IReadOnlyCollection<string!>! projectIds, bool includeTransitiveOrigins, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<NuGet.VisualStudio.Internal.Contracts.IInstalledAndTransitivePackages!>
NuGet.VisualStudio.Internal.Contracts.INuGetProjectManagerService.GetTargetFrameworksAsync(System.Collections.Generic.IReadOnlyCollection<string!>! projectIds, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyCollection<Chocolatey.NuGet.Frameworks.NuGetFramework!>!>
NuGet.VisualStudio.Internal.Contracts.IPackageReferenceContextInfo.Framework.get -> Chocolatey.NuGet.Frameworks.NuGetFramework?
NuGet.VisualStudio.Internal.Contracts.IProjectMetadataContextInfo.SupportedFrameworks.get -> System.Collections.Generic.IReadOnlyCollection<Chocolatey.NuGet.Frameworks.NuGetFramework!>?
NuGet.VisualStudio.Internal.Contracts.IProjectMetadataContextInfo.TargetFramework.get -> Chocolatey.NuGet.Frameworks.NuGetFramework?
NuGet.VisualStudio.Internal.Contracts.PackageReferenceContextInfo.Framework.get -> Chocolatey.NuGet.Frameworks.NuGetFramework?
NuGet.VisualStudio.Internal.Contracts.PackageReferenceContextInfo.PackageReferenceContextInfo(NuGet.Packaging.Core.PackageIdentity! identity, Chocolatey.NuGet.Frameworks.NuGetFramework? framework) -> void
NuGet.VisualStudio.Internal.Contracts.ProjectMetadataContextInfo.SupportedFrameworks.get -> System.Collections.Generic.IReadOnlyCollection<Chocolatey.NuGet.Frameworks.NuGetFramework!>?
NuGet.VisualStudio.Internal.Contracts.ProjectMetadataContextInfo.TargetFramework.get -> Chocolatey.NuGet.Frameworks.NuGetFramework?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageReferenceContextInfo.Framework.get -> Chocolatey.NuGet.Frameworks.NuGetFramework?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageReferenceContextInfo.TransitivePackageReferenceContextInfo(NuGet.Packaging.Core.PackageIdentity! identity, Chocolatey.NuGet.Frameworks.NuGetFramework? framework) -> void
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.BugTrackerUrl.get -> System.Uri!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.DocsUrl.get -> System.Uri!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.DownloadCache.get -> System.Collections.Generic.IEnumerable<NuGet.Protocol.Core.Types.DownloadCache!>!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.DownloadCacheDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.DownloadCacheStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.IsApproved.get -> bool
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.IsDownloadCacheAvailable.get -> bool
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.MailingListUrl.get -> System.Uri!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageApprovedDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageCleanupResultDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageFeed.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageHash.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageHashAlgorithm.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackagePath.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageReviewedDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageReviewer.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageScanFlagResult.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageScanResultDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageScanStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageSize.get -> long?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageSourceUrl.get -> System.Uri!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageSubmittedStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageTestResultStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageTestResultStatusDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageValidationResultDate.get -> System.DateTime?
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.PackageValidationResultStatus.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.ProjectSourceUrl.get -> System.Uri!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.ReleaseNotes.get -> string!
NuGet.VisualStudio.Internal.Contracts.TransitivePackageSearchMetadata.VersionDownloadCount.get -> int?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.INuGetProjectManagerService.GetTargetFrameworksAsync(System.Collections.Generic.IReadOnlyCollection<string!>! projectIds, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyCollection<NuGet.Frameworks.NuGetFramework!>!>
*REMOVED* NuGet.VisualStudio.Internal.Contracts.PackageReferenceContextInfo.Framework.get -> NuGet.Frameworks.NuGetFramework?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.IProjectMetadataContextInfo.SupportedFrameworks.get -> System.Collections.Generic.IReadOnlyCollection<NuGet.Frameworks.NuGetFramework!>?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.IProjectMetadataContextInfo.TargetFramework.get -> NuGet.Frameworks.NuGetFramework?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.PackageReferenceContextInfo.PackageReferenceContextInfo(NuGet.Packaging.Core.PackageIdentity! identity, NuGet.Frameworks.NuGetFramework? framework) -> void
*REMOVED* NuGet.VisualStudio.Internal.Contracts.ProjectMetadataContextInfo.SupportedFrameworks.get -> System.Collections.Generic.IReadOnlyCollection<NuGet.Frameworks.NuGetFramework!>?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.ProjectMetadataContextInfo.TargetFramework.get -> NuGet.Frameworks.NuGetFramework?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.TransitivePackageReferenceContextInfo.Framework.get -> NuGet.Frameworks.NuGetFramework?
*REMOVED* NuGet.VisualStudio.Internal.Contracts.TransitivePackageReferenceContextInfo.TransitivePackageReferenceContextInfo(NuGet.Packaging.Core.PackageIdentity! identity, NuGet.Frameworks.NuGetFramework? framework) -> void
